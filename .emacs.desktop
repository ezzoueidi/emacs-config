;; -*- mode: emacs-lisp; lexical-binding:t; coding: utf-8-emacs; -*-
;; --------------------------------------------------------------------------
;; Desktop File for Emacs
;; --------------------------------------------------------------------------
;; Created Mon Mar 20 23:17:05 2023
;; Desktop file format version 208
;; Emacs version 28.2

;; Global section:
(setq desktop-saved-frameset [frameset 1 (25624 59761 563494 757000) (desktop . "208") "ezzoueidi@qwerty" nil nil ((((minibuffer . t) (undecorated) (override-redirect) (font . "-1ASC-Liberation Mono-normal-normal-normal-*-13-*-*-*-m-0-iso10646-1") (font-parameter . "monospace-10") (border-width . 0) (internal-border-width . 0) (child-frame-border-width) (right-divider-width . 0) (bottom-divider-width . 0) (vertical-scroll-bars) (horizontal-scroll-bars) (foreground-color . "#b2b2b2") (background-color . "#292b2e") (mouse-color . "black") (border-color . "black") (screen-gamma) (line-spacing) (left-fringe . 8) (right-fringe . 8) (no-special-glyphs) (scroll-bar-foreground . "white") (scroll-bar-background) (menu-bar-lines . 0) (tab-bar-lines . 0) (tool-bar-lines . 0) (title) (wait-for-wm . t) (tool-bar-position . top) (inhibit-double-buffering) (icon-type . t) (auto-raise) (auto-lower) (cursor-type . box) (scroll-bar-width . 16) (scroll-bar-height) (alpha) (no-focus-on-map) (no-accept-focus) (fullscreen) (visibility . t) (skip-taskbar) (z-group) (display-type . color) (background-mode . dark) (cursor-color . "#e3dedd") (sticky) (environment) (last-focus-update . t) (frameset--id . "7456-E5C8-10FB-7944") (frameset--mini t . t) (modeline . t) (unsplittable) (icon-name) (display . ":0") (explicit-name) (height . 69) (width . 237) (left . 0) (top . 18)) ((min-height . 8) (min-width . 20) (min-height-ignore . 6) (min-width-ignore . 8) (min-height-safe . 2) (min-width-safe . 4) (min-pixel-height . 120) (min-pixel-width . 160) (min-pixel-height-ignore . 90) (min-pixel-width-ignore . 64) (min-pixel-height-safe . 30) (min-pixel-width-safe . 32)) hc (pixel-width . 1916) (pixel-height . 1026) (total-width . 240) (total-height . 68) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 956) (pixel-height . 1026) (total-width . 120) (total-height . 68) (normal-height . 1.0) (normal-width . 0.5) (buffer "*dashboard*" (selected) (hscroll . 0) (fringes 8 8 nil nil) (margins nil) (scroll-bars nil 0 t nil 0 nil nil) (vscroll . 0) (dedicated) (point . 661) (start . 1)) (prev-buffers ("*dashboard*" 1 856) ("l.org" 1 29) ("main.org" 1 9) ("init.el" 1 1844))) (vc (last . t) (pixel-width . 960) (pixel-height . 1026) (total-width . 120) (total-height . 68) (normal-height . 1.0) (normal-width . 0.5) (combination-limit) (leaf (pixel-width . 960) (pixel-height . 516) (total-width . 120) (total-height . 34) (normal-height . 0.5) (normal-width . 1.0) (buffer "*vterminal<1>*" (selected . t) (hscroll . 0) (fringes 8 8 nil nil) (margins nil) (scroll-bars nil 0 t nil 0 nil nil) (vscroll . 0) (dedicated) (point . 4524) (start . 2714)) (prev-buffers ("init.el" 1447 1844) ("main.org" 1 10))) (leaf (last . t) (pixel-width . 960) (pixel-height . 510) (total-width . 120) (total-height . 34) (normal-height . 0.5) (normal-width . 1.0) (buffer "*Help*" (selected) (hscroll . 0) (fringes 8 8 nil nil) (margins nil) (scroll-bars nil 0 t nil 0 nil nil) (vscroll . 0) (dedicated) (point . 1) (start . 1)) (prev-buffers ("init.el" 1447 1844))))))])
(setq desktop-missing-file-warning nil)
(setq tags-file-name nil)
(setq tags-table-list nil)
(setq search-ring '(#("package-initalize" 0 17 (isearch-regexp-function nil isearch-case-fold-search t)) #("Pro" 0 3 (isearch-regexp-function nil isearch-case-fold-search nil)) #("jira" 0 4 (isearch-regexp-function nil isearch-case-fold-search t)) #("load" 0 4 (isearch-case-fold-search t isearch-regexp-function nil)) #("load-theme" 0 10 (isearch-regexp-function nil isearch-case-fold-search t)) #("auto-revert" 0 11 (isearch-regexp-function nil isearch-case-fold-search t)) #("custom.e" 0 8 (isearch-regexp-function nil isearch-case-fold-search t)) #("save-place" 0 10 (isearch-case-fold-search t isearch-regexp-function nil)) #("recentf" 0 7 (isearch-regexp-function nil isearch-case-fold-search t)) #("fonts" 0 5 (isearch-case-fold-search t isearch-regexp-function nil)) #("facename" 0 8 (isearch-regexp-function nil isearch-case-fold-search t)) #("font" 0 4 (isearch-regexp-function nil isearch-case-fold-search t)) #("sans" 0 4 (isearch-regexp-function nil isearch-case-fold-search t)) #("g" 0 1 (isearch-regexp-function nil isearch-case-fold-search t)) #("number" 0 6 (isearch-case-fold-search t isearch-regexp-function nil)) #("me" 0 2 (isearch-case-fold-search t isearch-regexp-function nil))))
(setq regexp-search-ring '("org-directory" "zz/" "zz" "org-agenda-files" "swiss" "forward" "emojify" "after-init" "yes" "initial" "blink" "coding" "glob" "globa" "key" "multi-"))
(setq register-alist nil)
(setq file-name-history '("/etc/portage/make.conf" "~/org/main.org" "~/l.org" "~/.emacs.d/org-agenda-dashboard.el" "~/Personal" "~/.emacs.d/init.el" "~/.emacs.d/themes/catppuccin-theme.el" "~/.emacs.d/.init.el.~undo-tree~" "~/.emacs.d/init.org" "~/.emacs.d/custom.el" "~/.Xresources" "~/.emacs.d/elpa/org-9.6.1/org-loaddefs.el"))

;; Buffer section -- buffers listed in same order as in buffer list:
(desktop-create-buffer 208
  "/home/ezzoueidi/.emacs.d/init.el"
  "init.el"
  'emacs-lisp-mode
  '(eldoc-mode override-global-mode auto-compile-on-load-mode which-key-mode helm-mode undo-tree-mode company-mode rainbow-delimiters-mode smartparens-mode projectile-mode org-edna-mode)
  1844
  '(665 nil)
  nil
  nil
  '((buffer-display-time 25624 52450 395123 594000) (buffer-file-coding-system . utf-8-unix))
  '((mark-ring (9467 1044 40927 40382 34696 34449 31851 31651 31650 32283 30751 30750 30897 31905 25661 24892))))

(desktop-append-buffer-args 208
  "/home/ezzoueidi/org/main.org"
  "main.org"
  'org-mode
  '(visual-line-mode buffer-face-mode override-global-mode auto-compile-on-load-mode which-key-mode org-indent-mode helm-mode undo-tree-mode company-mode projectile-mode org-edna-mode)
  10
  '(nil nil)
  nil
  nil
  '((indent-tabs-mode) (buffer-display-time 25624 31911 16745 717000) (buffer-file-coding-system . undecided-unix) (truncate-lines))
  '((mark-ring nil)))

(desktop-append-buffer-args 208
  "/home/ezzoueidi/l.org"
  "l.org"
  'org-mode
  '(visual-line-mode buffer-face-mode override-global-mode auto-compile-on-load-mode which-key-mode org-indent-mode helm-mode undo-tree-mode company-mode projectile-mode org-edna-mode)
  29
  '(nil nil)
  nil
  nil
  '((indent-tabs-mode) (buffer-display-time 25624 23853 675533 674000) (buffer-file-coding-system . undecided-unix) (truncate-lines))
  '((mark-ring nil)))

