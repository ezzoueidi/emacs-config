;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(read-number-history erc-nick-history-list erc-server-history-list command-history goto-line-history empty-history helm-M-x-input-history minibuffer-history swiper-history buffer-name-history yes-or-no-p-history file-name-history search-ring extended-command-history))
(setq erc-nick-history-list '("ezzoueidi"))
(setq erc-server-history-list '("irc.libera.chat"))
(setq command-history '((describe-variable 'server-socket-dir) (server-start nil) (goto-line 1 nil) (org-agenda nil) (goto-line 1 nil) (goto-line 1 nil) (org-agenda-show nil) (org-agenda-show nil) (goto-line 1 nil) (emojify-list-emojis) (all-the-icons-install-fonts nil) (goto-line 1 nil) (global-emojify-mode 'toggle) (global-emojify-mode 'toggle) (package-install 'emojify nil) (dashboard-open) (goto-line 1 nil) (eval-buffer) (org-agenda-dashboard) (dashboard-open) (dashboard-open) (dashboard-open) (projectile-mode 'toggle) (projectile-mode 'toggle) (dashboard-refresh-buffer)))
(setq goto-line-history '("1" "190" "1" "2"))
(setq helm-M-x-input-history '("server-start" "org-agenda" "agenda" "emoji" "all-the-icons" "g" "emojify" "packa" "global-emojify" "dashboard" "eval-bu" "org-agenda-dashboard" "dashb" "dash" "dashb" "projectile" "dashboard-refre" "dash" "pac" "pack" "dash" "dashboar" "packa" "multi" "multi-v"))
(setq minibuffer-history '("server-soc" #("**" 0 1 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("***** " 0 3 (face org-indent) 3 6 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("***** " 0 3 (face org-indent) 3 6 (face org-indent)) composition (1 1 [9675]) keymap (keymap) face org-level-2)) #("--sync" 0 6 (fontified t font-lock-face (:extend t))) "/etc/portage/ma" #("Start" 0 5 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("***** " 0 3 (face org-indent) 3 6 (face org-indent)) org-todo-head "TODO" face org-level-2)) "Emacs " #("" 0 1 (fontified t indent-prefix #(" " 0 1 (display (space :align-to (- center 15)))) line-prefix #(" " 0 1 (display (space :align-to (- center 15)))) rear-nonsticky t display (raise -0.06) font-lock-face (:family "file-icons" :height 1.2 :inherit all-the-icons-purple) face (:family "file-icons" :height 1.2 :inherit all-the-icons-purple))) #("3" 0 1 (fontified t)) #("-*-" 0 1 (org-emphasis t font-lock-multiline t face (bold) wrap-prefix "" line-prefix "" fontified t) 1 2 (invisible t org-emphasis t font-lock-multiline t wrap-prefix "" line-prefix "" fontified t) 2 3 (wrap-prefix "" line-prefix "" fontified t)) #("nil" 0 3 (fontified t)) #("projects" 0 8 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("***** " 0 3 (face org-indent) 3 6 (face org-indent)) face org-level-2)) "/home/ezzoueidi/org/" "/home/ezzoueidi/" "emojify" "Desktop" "/home/ezzoueidi/.emacs.d/org" "2023-03-19" #("t" 0 1 (fontified nil)) "all-the-icons" "page-break-lines" #(":config" 0 7 (face font-lock-builtin-face fontified t)) "dashboard" "multi-vterm" "/home/ezzoueidi/Personal" "/home/ezzoueidi/.emacs.d/ini"))
(setq swiper-history '("brave" "dashboard-week" #("org-directory" 0 13 (ivy-index 0)) #("   (org-directory \"~/org\")" 0 1 (swiper-line-number 352 display "352  ") 1 3 (fontified t) 3 4 (fontified t face (rainbow-delimiters-depth-3-face)) 4 18 (fontified t) 18 25 (fontified t face font-lock-string-face) 25 26 (fontified t face (rainbow-delimiters-depth-3-face))) "zz/" #("zz/" 0 3 (ivy-index 0)) #("                                         'zz/sp-enclose-next-sexp))))" 0 1 (display "1352 " swiper-line-number 1352) 1 65 (fontified t) 65 66 (face (rainbow-delimiters-depth-5-face) fontified t) 66 67 (face (rainbow-delimiters-depth-4-face) fontified t) 67 68 (face (rainbow-delimiters-depth-3-face) fontified t) 68 69 (face (rainbow-delimiters-depth-2-face) fontified t)) #(" (defun zz/sp-enclose-next-sexp (num)" 0 1 (display "1332 " swiper-line-number 1332) 1 2 (face (rainbow-delimiters-depth-2-face) fontified t) 2 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 31 (face font-lock-function-name-face fontified t) 31 32 (fontified t) 32 33 (face (rainbow-delimiters-depth-3-face) fontified t) 33 36 (fontified t) 36 37 (face (rainbow-delimiters-depth-3-face) fontified t)) #("   (setq hl-line-range-function #'zz/get-visual-line-range)" 0 1 (display "1104 " swiper-line-number 1104) 1 3 (fontified t) 3 4 (face (rainbow-delimiters-depth-3-face) fontified t) 4 8 (face font-lock-keyword-face fontified t) 8 58 (fontified t) 58 59 (face (rainbow-delimiters-depth-3-face) fontified t)) #("   (defun zz/get-visual-line-range ()" 0 1 (display "1095 " swiper-line-number 1095) 1 3 (fontified t) 3 4 (face (rainbow-delimiters-depth-3-face) fontified t) 4 9 (face font-lock-keyword-face fontified t) 9 10 (fontified t) 10 34 (face font-lock-function-name-face fontified t) 34 35 (fontified t) 35 36 (face (rainbow-delimiters-depth-4-face) fontified t) 36 37 (face (rainbow-delimiters-depth-4-face) fontified t)) #("    (zz/org-if-str (concat \"=\" func \"()=\") desc)))" 0 1 (display "1012 " swiper-line-number 1012) 1 4 (fontified t) 4 5 (face (rainbow-delimiters-depth-4-face) fontified t) 5 8 (fontified t) 8 19 (fontified t) 19 20 (face (rainbow-delimiters-depth-5-face) fontified t) 20 27 (fontified t) 27 30 (face font-lock-string-face fontified t) 30 36 (fontified t) 36 41 (face font-lock-string-face fontified t) 41 42 (face (rainbow-delimiters-depth-5-face) fontified t) 42 47 (fontified t) 47 48 (face (rainbow-delimiters-depth-4-face) fontified t) 48 49 (face (rainbow-delimiters-depth-3-face) fontified t) 49 50 (face (rainbow-delimiters-depth-2-face) fontified t)) #("    (zz/org-if-str func desc)))" 0 1 (display "1006 " swiper-line-number 1006) 1 4 (fontified t) 4 5 (face (rainbow-delimiters-depth-4-face) fontified t) 5 28 (fontified t) 28 29 (face (rainbow-delimiters-depth-4-face) fontified t) 29 30 (face (rainbow-delimiters-depth-3-face) fontified t) 30 31 (face (rainbow-delimiters-depth-2-face) fontified t)) #("            (zz/org-if-str func section))" 0 1 (display "1005 " swiper-line-number 1005) 1 12 (fontified t) 12 13 (face (rainbow-delimiters-depth-5-face) fontified t) 13 39 (fontified t) 39 40 (face (rainbow-delimiters-depth-5-face) fontified t) 40 41 (face (rainbow-delimiters-depth-4-face) fontified t)) #("   (zz/org-macro-keys-code-inner str))" 0 1 (display "1000 " swiper-line-number 1000) 1 3 (fontified t) 3 4 (face (rainbow-delimiters-depth-3-face) fontified t) 4 36 (fontified t) 36 37 (face (rainbow-delimiters-depth-3-face) fontified t) 37 38 (face (rainbow-delimiters-depth-2-face) fontified t)) #("                        (zz/org-if-str func (concat \".\" func)))))))" 0 1 (display "986  " swiper-line-number 986) 1 24 (fontified t) 24 25 (face (rainbow-delimiters-depth-7-face) fontified t) 25 44 (fontified t) 44 45 (face (rainbow-delimiters-depth-8-face) fontified t) 45 52 (fontified t) 52 55 (face font-lock-string-face fontified t) 55 60 (fontified t) 60 61 (face (rainbow-delimiters-depth-8-face) fontified t) 61 62 (face (rainbow-delimiters-depth-7-face) fontified t) 62 63 (face (rainbow-delimiters-depth-6-face) fontified t) 63 64 (face (rainbow-delimiters-depth-5-face) fontified t) 64 65 (face (rainbow-delimiters-depth-4-face) fontified t) 65 66 (face (rainbow-delimiters-depth-3-face) fontified t) 66 67 (face (rainbow-delimiters-depth-2-face) fontified t)) #(" (defun zz/org-reformat-buffer ()" 0 1 (display "955  " swiper-line-number 955) 1 2 (face (rainbow-delimiters-depth-2-face) fontified t) 2 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 30 (face font-lock-function-name-face fontified t) 30 31 (fontified t) 31 32 (face (rainbow-delimiters-depth-3-face) fontified t) 32 33 (face (rainbow-delimiters-depth-3-face) fontified t)) #(" (defun zz/write ()" 0 1 (display "837  " swiper-line-number 837) 1 2 (face (rainbow-delimiters-depth-2-face) fontified t) 2 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 16 (face font-lock-function-name-face fontified t) 16 17 (fontified t) 17 18 (face (rainbow-delimiters-depth-3-face) fontified t) 18 19 (face (rainbow-delimiters-depth-3-face) fontified t)) #(" (defun zz/org-babel-tangle-async (file)" 0 1 (display "812  " swiper-line-number 812) 1 2 (face (rainbow-delimiters-depth-2-face) fontified t) 2 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 33 (face font-lock-function-name-face fontified t) 33 34 (fontified t) 34 35 (face (rainbow-delimiters-depth-3-face) fontified t) 35 39 (fontified t) 39 40 (face (rainbow-delimiters-depth-3-face) fontified t)) #(" (bind-key \"%\" 'zz/goto-match-paren)" 0 1 (display "339  " swiper-line-number 339) 1 2 (face (rainbow-delimiters-depth-2-face) fontified t) 2 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 14 (face font-lock-string-face fontified t) 14 35 (fontified t) 35 36 (face (rainbow-delimiters-depth-2-face) fontified t)) #("                                 zz/goto-match-paren" 0 1 (display "301  " swiper-line-number 301) 1 52 (fontified t)) #(" (defun zz/goto-match-paren (arg)" 0 1 (display "295  " swiper-line-number 295) 1 2 (face (rainbow-delimiters-depth-2-face) fontified t) 2 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 27 (face font-lock-function-name-face fontified t) 27 28 (fontified t) 28 29 (face (rainbow-delimiters-depth-3-face) fontified t) 29 32 (fontified t) 32 33 (face (rainbow-delimiters-depth-3-face) fontified t)) #("        (defun zz/text-scale-reset ()" 0 1 (display "249  " swiper-line-number 249) 1 8 (fontified t) 8 9 (face (rainbow-delimiters-depth-4-face) fontified t) 9 14 (face font-lock-keyword-face fontified t) 14 15 (fontified t) 15 34 (face font-lock-function-name-face fontified t) 34 35 (fontified t) 35 36 (face (rainbow-delimiters-depth-5-face) fontified t) 36 37 (face (rainbow-delimiters-depth-5-face) fontified t)) #("zz" 0 2 (ivy-index 2)) #(" ;(defun zz/unset-proxy ()" 0 1 (display "168  " swiper-line-number 168) 1 2 (face font-lock-comment-delimiter-face fontified t) 2 26 (face font-lock-comment-face fontified t)) #("org-agenda-files" 0 16 (ivy-index 0)) #(" (custom-set-variables '(org-agenda-files" 0 1 (display "467  " swiper-line-number 467) 1 2 (face (rainbow-delimiters-depth-2-face) fontified t) 2 24 (fontified t) 24 25 (face (rainbow-delimiters-depth-3-face) fontified t) 25 41 (fontified t)) "C-r" "org-roam"))
(setq buffer-name-history '("init.el" "*scratch*"))
(setq yes-or-no-p-history '("yes" "no" "yes"))
(setq file-name-history '("/etc/portage/make.conf" "~/org/main.org" "~/l.org" "~/.emacs.d/org-agenda-dashboard.el" "~/Personal" "~/.emacs.d/init.el" "~/.emacs.d/themes/catppuccin-theme.el" "~/.emacs.d/.init.el.~undo-tree~" "~/.emacs.d/init.org" "~/.emacs.d/custom.el" "~/.Xresources" "~/.emacs.d/elpa/org-9.6.1/org-loaddefs.el"))
(setq search-ring '(#("package-initalize" 0 17 (isearch-regexp-function nil isearch-case-fold-search t)) #("Pro" 0 3 (isearch-regexp-function nil isearch-case-fold-search nil)) #("jira" 0 4 (isearch-regexp-function nil isearch-case-fold-search t)) #("load" 0 4 (isearch-case-fold-search t isearch-regexp-function nil)) #("load-theme" 0 10 (isearch-regexp-function nil isearch-case-fold-search t)) #("auto-revert" 0 11 (isearch-regexp-function nil isearch-case-fold-search t)) #("custom.e" 0 8 (isearch-regexp-function nil isearch-case-fold-search t)) #("save-place" 0 10 (isearch-case-fold-search t isearch-regexp-function nil)) #("recentf" 0 7 (isearch-regexp-function nil isearch-case-fold-search t)) #("fonts" 0 5 (isearch-case-fold-search t isearch-regexp-function nil)) #("facename" 0 8 (isearch-regexp-function nil isearch-case-fold-search t)) #("font" 0 4 (isearch-regexp-function nil isearch-case-fold-search t)) #("sans" 0 4 (isearch-regexp-function nil isearch-case-fold-search t)) #("g" 0 1 (isearch-regexp-function nil isearch-case-fold-search t)) #("number" 0 6 (isearch-case-fold-search t isearch-regexp-function nil)) #("me" 0 2 (isearch-case-fold-search t isearch-regexp-function nil))))
(setq extended-command-history '("server-start" "org-agenda" "emojify-list-emojis" "all-the-icons-install-fonts" "global-emojify-mode" "package-install" "eval-buffer" "org-agenda-dashboard" "projectile-mode" "package-install" "multi-vterm" "multi-vterm-next" "multi-vterm-prev" "multi-vterm" "package-install" "vterm" "other-frame" "erc" "list-packages" "vterm" "package-install" "vterm" "kill-emacs"))
(setq projectile-project-command-history '#s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ()))
